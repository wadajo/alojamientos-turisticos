plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0-RC1'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'jacoco'
}

group = 'com.wadajo'
version = '1.0.0-SNAPSHOT'

java {
	sourceCompatibility = "21"
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-graphql'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.wiremock.integrations:wiremock-spring-boot:3.9.0'
	implementation 'commons-io:commons-io:2.19.0'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	testImplementation 'io.rest-assured:rest-assured:5.5.1'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.graphql:spring-graphql-test'
	testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo.spring3x:4.20.0'
	testRuntimeOnly("org.junit.platform:junit-platform-launcher")
}

tasks.named('test') {
	useJUnitPlatform()
}

jacoco {
	toolVersion = "0.8.11"
}

tasks.jacocoTestReport {
	reports {
		xml.required = true
		html.required = true
	}
}

jacocoTestReport {
	afterEvaluate {
		classDirectories.setFrom(
				files(classDirectories.files.collect {
					fileTree(dir: it, exclude: [
							'com/wadajo/turismomadrid/infrastructure/configuration/Constants.class',
							'com/wadajo/turismomadrid/infrastructure/util/Utils.class',
					])
				})
		)
	}
}

test {
	jvmArgs "-javaagent:${configurations.testRuntimeClasspath.find { it.name.contains('mockito-core') }}", '-Xshare:off'
}
